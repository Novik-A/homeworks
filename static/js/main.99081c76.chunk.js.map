{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css"],"names":["module","exports","Error404","Message","props","className","s","chat","src","avatar","alt","angle","speech","name","message","time","messageData","messageData2","HW1","Affair","all","affair","priority","buttonX","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","filter","selected","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","inputClass","trim","input","errorInput","greeting","value","onChange","onBlur","onKeyPress","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","key","HW3","v1","setUsers","newUser","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","btn","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.99081c76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3j1u2\",\"error\":\"Greeting_error__ss8ue\",\"input\":\"Greeting_input__1IqLW\",\"errorInput\":\"Greeting_errorInput__1YH9m\",\"button\":\"Greeting_button__1QFtT\",\"count\":\"Greeting_count__3p_YN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2nNo1\",\"superInput\":\"SuperInputText_superInput__2cj5h\",\"errorInput\":\"SuperInputText_errorInput__2y0yt\",\"error\":\"SuperInputText_error__KWcvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__2w945\",\"red\":\"SuperButton_red__15S7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__w6CkA\",\"column\":\"HW4_column__CQcA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2ubft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__sJXiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Affairs_all__zhze1\",\"button\":\"Affairs_button__3Ig1r\",\"selected\":\"Affairs_selected__3S_XJ\",\"buttonX\":\"Affairs_buttonX__1wlr8\",\"high\":\"Affairs_high__16x9z\",\"middle\":\"Affairs_middle__15mwn\",\"low\":\"Affairs_low__2H_S4\"};","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.chat}>\r\n            <img src={props.avatar} alt=\"\" className={s.avatar}/>\r\n            <div className={s.angle}></div>\r\n            <div className={s.speech}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.message}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Angel',\r\n    message: 'How are you?',\r\n    time: '22:00',\r\n}\r\nconst messageData2 = {\r\n    avatar: 'https://image.freepik.com/free-vector/samurai-esports-logo-for-your-team_116205-81.jpg',\r\n    name: 'Samurai',\r\n    message: 'I`m fine',\r\n    time: '22:10',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <Message\r\n                avatar={messageData2.avatar}\r\n                name={messageData2.name}\r\n                message={messageData2.message}\r\n                time={messageData2.time}\r\n            />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)\r\n    return (\r\n        <div >\r\n            <span className={s.all}>{props.affair.name}</span>\r\n            <span className={s[props.affair.priority]}>{props.affair.priority}</span>\r\n            <button className={s.buttonX} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter(\"all\");\r\n    const setHigh = () => props.setFilter(\"high\");\r\n    const setMiddle = () => props.setFilter(\"middle\");\r\n    const setLow = () => props.setFilter(\"low\");\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={props.filter === 'all' ? s.selected : s.button} onClick={setAll}>All</button>\r\n            <button className={props.filter === 'high' ? s.selected : s.button} onClick={setHigh}>High</button>\r\n            <button className={props.filter === 'middle' ? s.selected : s.button} onClick={setMiddle}>Middle</button>\r\n            <button className={props.filter === 'low' ? s.selected : s.button} onClick={setLow}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\";\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n};\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === \"all\") return affairs;\r\n    else return affairs.filter(el => el.priority === filter);\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(el => el._id !== _id);\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n    const filterAffair = (filter: FilterType) => setFilter(filter)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={filterAffair}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = name.trim() ? s.input : s.errorInput; // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div>\r\n                <input\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    onBlur={setNameCallback}\r\n                    onKeyPress={onKeyPressHandler}\r\n                    className={inputClass}\r\n                />\r\n                <div className={s.error}>{error}</div>\r\n            </div>\r\n            <button className={s.button} disabled={!name} onClick={addUser}>add</button>\r\n            <span className={s.count}>{totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimmedName = e.currentTarget.value\r\n        if (trimmedName) {\r\n        setName(trimmedName); // need to fix\r\n        setError('')\r\n        } else {\r\n            setName('')\r\n            setError('Name is required!');\r\n        } // need to fix\r\n    };\r\n    const addUser = () => {\r\n        if (name.trim()) {\r\n            addUserCallback(name.trim())\r\n            alert(`Hello ${name.trim()}!`)\r\n            setName('')\r\n        } else {\r\n            setName('')\r\n            setError('Name is required!');\r\n        }\r\n    };\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') { addUser() }\r\n    }\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <div>\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n        {/*<div>{users}</div>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([\r\n        {_id: v1(), name:'Alexander'},\r\n        {_id: v1(), name:'Alexey'},\r\n        {_id: v1(), name:'Andrew'}\r\n    ]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUser: UserType = {\r\n            _id: v1(),\r\n            name\r\n        }\r\n        setUsers([...users, newUser]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className ? className : \"\"}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.btn} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.checkbox}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span>{children}</span>\r\n        </label>  // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    // red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            junior\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;\r\n","import React from \"react\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            junior+\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: \"/junior-plus\",\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>pre-junior</NavLink>\r\n            <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\r\n            <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior+</NavLink>\r\n            <div className={s.block}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from 'react'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\nimport s from './App.module.css'\r\n// import HW1 from '../../../p2-homeworks/h1/HW1'\r\n// import HW2 from \"../../../p2-homeworks/h2/HW2\";\r\n// import HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n// import HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1vIiN\",\"link\":\"Header_link__Loa7W\",\"active\":\"Header_active__30D98\",\"block\":\"Header_block__3Pupb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Message_chat__3b078\",\"avatar\":\"Message_avatar__2UP62\",\"angle\":\"Message_angle__hp6Zs\",\"speech\":\"Message_speech__1GaQl\",\"name\":\"Message_name__3CxIP\",\"message\":\"Message_message__2WW1S\",\"time\":\"Message_time__3dC-X\"};"],"sourceRoot":""}